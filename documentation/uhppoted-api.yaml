openapi: "3.0.2"

info:
  version: 0.6.2
  title: "twystd-uhppoted"
  description: "REST API for the twystd UHPPOTE service. The API currently supports both device level functions and higher level access control list management."
  license:
    name: "MIT"
    url: "https://github.com/uhppoted/uhppoted/blob/master/LICENSE"
    
servers:    
  - url: "http://127.0.0.1:8080/uhppote"
  - url: "https://127.0.0.1:8443/uhppote"
  
tags:
  - name: "device"
    description: "Low level device API"
  - name: "acl"
    description: "Access control list API"

paths:
  /device:
    get:
      tags:
        - device
      summary: "Retrieves a list of active devices"
      description: "Retrieves the list of active UHPPOTE devices"
      operationId: listDevices
      responses:
        '200':
          description: "List of active devices"
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/DeviceList"        
        '405':
          description: "Invalid request"
        '500':
          description: "Internal system error"
        default:
          description: "Request failed"

  /device/{device-id}:
    get:
      tags:
        - device
      summary: "Retrieves a single device information"
      description: "Retrieves the basic configuration for a UHPPOTE device"
      operationId: getDevice
      parameters:
        - name: device-id
          in: path
          description: "Device serial number"
          required: true
          schema:
            type: integer
            format: uint32
            example: 405419896
      responses:
        '200':
          description: "Device configuration"
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/Device"        
        '404':
          description: "No device with ID matching device-id"
        '405':
          description: "Invalid request"
        '500':
          description: "Internal system error"
        default:
          description: "Request failed"
          
  /device/{device-id}/status:
    get:
      tags:
        - device
      summary: "Retrieves the device status"
      description: "Retrieves the current status of a device"
      operationId: getDeviceStatus
      parameters:
        - name: device-id
          in: path
          description: "Device serial number"
          required: true
          schema:
            type: integer
            format: uint32
            example: 405419896
      responses:
        '200':
          description: "Device current status"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/DeviceStatus"        
        '404':
          description: "No device with ID matching device-id"
        '405':
          description: "Invalid request"
        '500':
          description: "Internal system error"
        default:
          description: "Request failed"

  /device/{device-id}/time:
    get:
      tags:
        - device
      summary: "Retrieves the device time"
      description: "Retrieves the device current date/time"
      operationId: getDeviceTime
      parameters:
        - name: device-id
          in: path
          description: "Device serial number"
          required: true
          schema:
            type: integer
            format: uint32
            example: 405419896
      responses:
        '200':
          description: "Device current date/time"
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/DeviceTime"        
        '404':
          description: "No device with ID matching device-id"
        '405':
          description: "Invalid request"
        '500':
          description: "Internal system error"
        default:
          description: "Request failed"

    put:
      tags:
        - device
      summary: "Sets the device time"
      description: "Sets the device current date/time"
      operationId: putDeviceTime
      parameters:
        - name: device-id
          in: path
          description: "Device serial number"
          required: true
          schema:
            type: integer
            format: uint32
            example: 405419896
      requestBody:
        description: "Date time"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceTime"        
      responses:
        '200':
          description: "Device current date/time"
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/DeviceTime"        
        '404':
          description: "No device with ID matching device-id"
        '405':
          description: "Invalid request"
        '500':
          description: "Internal system error"
        default:
          description: "Request failed"

  /device/{device-id}/door/{door}/delay:
    get:
      tags:
        - device
      summary: "Retrieves the door delay"
      description: "Retrieves the door delay setting in seconds"
      operationId: getDoorDelay
      parameters:
        - name: device-id
          in: path
          description: "Device serial number"
          required: true
          schema:
            type: integer
            format: uint32
            example: 405419896
        - name: door
          in: path
          description: "Door number"
          required: true
          schema:
            type: integer
            format: uint8
            example: 3
      responses:
        '200':
          description: "Door delay (in seconds)"
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/DoorDelay"        
        '404':
          description: "No device with ID matching device-id"
        '405':
          description: "Invalid request"
        '500':
          description: "Internal system error"
        default:
          description: "Request failed"

    put:
      tags:
        - device
      summary: "Sets the door delay"
      description: "Sets the door delay in seconds"
      operationId: putDoorDelay
      parameters:
        - name: device-id
          in: path
          description: "Device serial number"
          required: true
          schema:
            type: integer
            format: uint32
            example: 405419896
        - name: door
          in: path
          description: "Door number"
          required: true
          schema:
            type: integer
            format: uint8
            example: 3
      requestBody:
        description: "Door delay in seconds"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DoorDelay"        
      responses:
        '200':
          description: "Door delay in seconds"
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/DoorDelay"        
        '404':
          description: "No device with ID matching device-id"
        '405':
          description: "Invalid request"
        '500':
          description: "Internal system error"
        default:
          description: "Request failed"

  /device/{device-id}/door/{door}/control:
    get:
      tags:
        - device
      summary: "Retrieves the door control state"
      description: "Retrieves the door control state (normally open, normally closed or controlled)"
      operationId: getDoorControlState
      parameters:
        - name: device-id
          in: path
          description: "Device serial number"
          required: true
          schema:
            type: integer
            format: uint32
            example: 405419896
        - name: door
          in: path
          description: "Door number"
          required: true
          schema:
            type: integer
            format: uint8
            example: 3
      responses:
        '200':
          description: "Door control state"
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/DoorControlState"
        '404':
          description: "No device with ID matching device-id"
        '405':
          description: "Invalid request"
        '500':
          description: "Internal system error"
        default:
          description: "Request failed"

    put:
      tags:
        - device
      summary: "Sets the door control state"
      description: "Sets the door control state (normally open, normally closed or controlled"
      operationId: putDoorControlState
      parameters:
        - name: device-id
          in: path
          description: "Device serial number"
          required: true
          schema:
            type: integer
            format: uint32
            example: 405419896
        - name: door
          in: path
          description: "Door number"
          required: true
          schema:
            type: integer
            format: uint8
            example: 3
      requestBody:
        description: "Door control state"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DoorControlState"
      responses:
        '200':
          description: "Door control state"
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/DoorControlState"
        '404':
          description: "No device with ID matching device-id"
        '405':
          description: "Invalid request"
        '500':
          description: "Internal system error"
        default:
          description: "Request failed"

  /device/{device-id}/card:
    get:
      tags:
        - device
      summary: "Retrieves the device card list"
      description: "Retrieves the list of stored card numbers"
      operationId: getCards
      parameters:
        - name: device-id
          in: path
          description: "Device serial number"
          required: true
          schema:
            type: integer
            format: uint32
            example: 405419896
      responses:
        '200':
          description: "Card list"
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/CardList"        
        '404':
          description: "No device with ID matching device-id"
        '405':
          description: "Invalid request"
        '500':
          description: "Internal system error"
        default:
          description: "Request failed"

    delete:
      tags:
        - device
      summary: "Deletes the entire device card list"
      description: "Deletes all stored card numbers"
      operationId: deleteCards
      parameters:
        - name: device-id
          in: path
          description: "Device serial number"
          required: true
          schema:
            type: integer
            format: uint32
            example: 405419896
      responses:
        '200':
          description: "Stored card list cleared"
        '404':
          description: "No device with ID matching device-id"
        '405':
          description: "Invalid request"
        '500':
          description: "Internal system error"
        default:
          description: "Request failed"

  /device/{device-id}/card/{card-number}:
    get:
      tags:
        - device
      summary: "Retrieves card access information"
      description: "Retrieves the access permissions associated with a card number"
      operationId: getCard
      parameters:
        - name: device-id
          in: path
          description: "Device serial number"
          required: true
          schema:
            type: integer
            format: uint32
            example: 405419896
        - name: card-number
          in: path
          description: "Card number"
          required: true
          schema:
            type: integer
            format: uint32
            example: 192837465
      responses:
        '200':
          description: "Card access information"
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/Card"        
        '404':
          description: "No matching device and/or card"
        '405':
          description: "Invalid request"
        '500':
          description: "Internal system error"
        default:
          description: "Request failed"
          
    put:
      tags:
        - device
      summary: "Adds or updates a card"
      description: "Adds or updates the access permissions associated with a card number"
      operationId: putCard
      parameters:
        - name: device-id
          in: path
          description: "Device serial number"
          required: true
          schema:
            type: integer
            format: uint32
            example: 405419896
        - name: card-number
          in: path
          description: "Card number"
          required: true
          schema:
            type: integer
            format: uint32
            example: 192837465
      requestBody:
        description: "Card valid dates and access permissions"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CardDetails"        
      responses:
        '200':
          description: "Card details added/updated"
        '404':
          description: "No matching device and/or card"
        '405':
          description: "Invalid request"
        '500':
          description: "Internal system error"
        default:
          description: "Request failed"
                  
    delete:
      tags:
        - device
      summary: "Deletes a card"
      description: "Removes the card associated with the card number from the stored card list"
      operationId: deleteCard
      parameters:
        - name: device-id
          in: path
          description: "Device serial number"
          required: true
          schema:
            type: integer
            format: uint32
            example: 405419896
        - name: card-number
          in: path
          description: "Card number"
          required: true
          schema:
            type: integer
            format: uint32
            example: 192837465
      responses:
        '200':
          description: "Card deleted"
        '404':
          description: "No matching device and/or card"
        '405':
          description: "Invalid request"
        '500':
          description: "Internal system error"
        default:
          description: "Request failed"

  /device/{device-id}/events:
    get:
      tags:
        - device
      summary: "Retrieves the device event list indices"
      description: "Retrieves the indices of the first and last stored events"
      operationId: getEvents
      parameters:
        - name: device-id
          in: path
          description: "Device serial number"
          required: true
          schema:
            type: integer
            format: uint32
            example: 405419896
      responses:
        '200':
          description: "Event list"
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/Events"        
        '404':
          description: "No device with ID matching device-id"
        '405':
          description: "Invalid request"
        '500':
          description: "Internal system error"
        default:
          description: "Request failed"

  /device/{device-id}/event/{event-id}:
    get:
      tags:
        - device
      summary: "Retrieves a single event record"
      description: "Retrieves the event record for an event ID"
      operationId: getEvent
      parameters:
        - name: device-id
          in: path
          description: "Device serial number"
          required: true
          schema:
            type: integer
            format: uint32
            example: 405419896
        - name: event-id
          in: path
          description: "Event ID"
          required: true
          schema:
            type: integer
            format: uint32
            example: 31
      responses:
        '200':
          description: "Event record"
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/Event"        
        '404':
          description: "No matching device and/or event"
        '405':
          description: "Invalid request"
        '500':
          description: "Internal system error"
        default:
          description: "Request failed"
        
  /acl/card/{card-number}:
    get:
      tags:
        - acl
      summary: "Retrieves the access permissions for a card"
      description: "Retrieves the access permissions for a card, using the configuration to resolve the door ID to the controller + door number."
      operationId: aclShow
      parameters:
        - name: card-number
          in: path
          description: "Card number"
          required: true
          schema:
            type: integer
            format: uint32
            example: 192837465
      responses:
        '200':
          description: "List of current card access permissions"
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/CardPermissions"        
        '405':
          description: "Invalid request"
        '500':
          description: "Internal system error"
        default:
          description: "Request failed"
        
  /acl/card/{card-number}/doors/{door*}:
    put:
      tags:
        - acl
      summary: "Grants a card access to a door (or doors)"
      description: "Grants a card access to a 'named' door, using the configuration to resolve the door ID to the controller + door number. A 'granted' access is added to the existing permissions for the card and access dates are 'widened' to accommodate the earliest 'start' date and the latest 'end' date."
      operationId: aclGrant
      parameters:
        - name: card-number
          in: path
          description: "Card number"
          required: true
          schema:
            type: integer
            format: uint32
            example: 192837465
        - name: door*
          in: path
          description: "Door ID's ('ALL' will grant access to all doors)"
          required: true
          explode: true
          schema:
            type: string
            format: Alphanumeric door name (space- and case-insensitive).
            example: "Entrance, Upstairs"
      requestBody:
        description: "Card valid dates"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DateRange"        
      responses:
        '200':
          description: "Access granted"
        '405':
          description: "Invalid request"
        '500':
          description: "Internal system error"
        default:
          description: "Request failed"

    delete:
      tags:
        - acl
      summary: "Revokes a card access to a door (or doors)"
      description: "Revokes a card's access to a 'named' door, using the configuration to resolve the door ID to the controller + door number. A 'revoked' access is removed from the existing permissions for the card without modifying the card start/end dates."
      operationId: aclRevoke
      parameters:
        - name: card-number
          in: path
          description: "Card number"
          required: true
          schema:
            type: integer
            format: uint32
            example: 192837465
        - name: door*
          in: path
          description: "Door ID's ('ALL' will revoke access to all doors)"
          required: true
          explode: true
          schema:
            type: string
            format: Alphanumeric door name (space- and case-insensitive).
            example: "Entrance"
      responses:
        '200':
          description: "Access revoked"
        '405':
          description: "Invalid request"
        '500':
          description: "Internal system error"
        default:
          description: "Request failed"

  /acl:
    get:
      tags:
        - acl
      summary: "Retrieves an access control list from a set of controllers"
      description: "Retrieves and consolidates the card lists from a set of controllers into a list of access permissions associated with each card."
      operationId: aclGet
      responses:
        '200':
          description: "Consolidated access control lists"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AccessListRecord"        
        '405':
          description: "Invalid request"
        '500':
          description: "Internal system error"
        default:
          description: "Request failed"
  
    put:
      tags:
        - acl
      summary: "Loads an access control list to a set of controllers"
      description: "Updates the cards on a set of controllers from an access control list that specifies the access permissions for all users."
      operationId: aclPut
      requestBody:
        description: "Access control list"
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/AccessListRecord"        
      responses:
        '200':
          description: "Result of access control lists update"
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/PutACLResult"        
        '405':
          description: "Invalid request"
        '500':
          description: "Internal system error"
        default:
          description: "Request failed"

components:
  schemas:
    DeviceList:
      required: 
        - devices
      properties:
        devices:
          type: array
          items:
            $ref: "#/components/schemas/DeviceID"        
          description: "List of 'found' devices"

    DeviceID:
      required: 
        - device-id
        - device-type
      properties:
        device-id:  
          type: number
          format: uint32
          description: "UHPPOTE device serial number"
          example: 405419896
        device-type:  
          type: string
          format: string
          description: "UHPPOTE device type"
          example: "UT0311-L04"

    Device:
      required: 
        - device-type
        - ip-address
        - subnet-mask
        - gateway-address
        - mac-address
        - version
        - date
      properties:
        device-type:  
          type: string
          format: string
          description: "UHPPOTE device type"
          example: "UT0311-L04"
        ip-address:  
          type: string
          format: IPv4 address
          description: "Device IP address"
          example: "192.168.1.50"
        subnet-mask:  
          type: string
          format: IPv4 address
          description: "Device IP subnet mask"
          example: "255.255.255.0"
        gateway-address:  
          type: string
          format: IPv4 address
          description: "Device IP gateway address"
          example: "192.168.1.1"
        mac-address:  
          type: string
          format: 6 byte hexadecimal
          description: "Device MAC address"
          example: "00:12:23:34:45:56"
        version:  
          type: string
          format: uint16 hexadecimal
          description: "Device firmware version"
          example: "0892"
        date:  
          type: string
          format: yyyy-mm-dd
          description: "Device current date"
          example: "2020-03-28"

    DeviceStatus:
      required: 
        - last-event-index
        - event-type
        - access-granted
        - door
        - door-opened
        - user-id
        - event-timestamp
        - event-result
        - door-state 
        - door-buttons
        - system-state
        - system-datetime
        - packet-number
        - backup-state
        - special-message
        - battery-status
        - fire-alarm-status
      properties:
        last-event-index:
          type: number
          format: uint32
          description: "Index of last recorded event"
          example: 37
        event-type:
          type: number
          format: uint8
          description: "Type of last recorded event"
          example: 3
        access-granted:
          type: boolean
          format: true/false
          description: "Access granted/refused"
          example: true
        door:
          type: number
          format: uint8 (1..4)
          description: "Door ID for event"
          example: 3
        door-opened:
          type: boolean
          format: true/false
          description: "Door opened to request"
          example: true
        user-id:
          type: number
          format: uint32
          description: "User ID (card number for swipe events)"
          example: 1928374646
        event-timestamp:  
          type: string
          format: yyyy-mm-dd HH:mm:ss
          description: "Event timestamp"
          example: "2020-03-28 15:32:29"
        event-result:  
          type: integer
          format: event result code
          description: "Event result code"
          example: 6
        door-state:  
          type: array
          format: array of 4 boolean values
          description: "Door open state array"
          example: [true, false, false, true]
        door-buttons:  
          type: array
          format: array of 4 boolean values
          description: "Door button state array"
          example: [false, false, false, true]
        system-state:  
          type: integer
          format: uint8
          description: "System state flag set"
          example: 0
        system-datetime:  
          type: string
          format: yyyy-mm-dd HH:mm:ss
          description: "Current system date and time"
          example: "2020-03-28 15:32:29"
        packet-number:  
          type: integer
          format: uint8
          description: "Packet number, whatever that entails"
          example: 0
        backup-state:  
          type: integer
          format: uint8
          description: "Backup state code, whatever that entails"
          example: 0
        special-message:  
          type: integer
          format: uint8
          description: "Special message code, whatever that entails"
          example: 0
        battery-status:  
          type: integer
          format: uint8
          description: "Battery status flag set"
          example: 0
        fire-alarm-status:  
          type: integer
          format: uint8
          description: "Fire alarm status flag set"
          example: 0

    DeviceTime:
      properties:
        datetime:
          type: string
          format: yyyy-mm-dd HH:mm:ss
          description: "Current device date/time"
          example: "2020-03-28 15:32:29"

    DoorDelay:
      properties:
        delay:
          type: number
          format: uint8
          description: "Door delay in seconds"
          example: 5
          
    DoorControlState:
      properties:
        control:
          type: string
          format: "'normally open', 'normally closed' or 'controlled'"
          description: "Door control state"
          example: 'normally closed'

    CardList:
      required: 
        - cards
      properties:
        devices:
          type: array
          items:
             type: number
             format: uint32
             description: "Card number"
          example: 192837465
          description: "List of card numbers"

    Card:
      required: 
        - card-number
        - start-date
        - end-date
        - doors
      properties:
        card-number:  
          type: number
          format: uint32
          description: "Card number"
          example: 192837465
        start-date:  
          type: string
          format: yyyy-MM-dd
          description: "First date card is valid"
          example: "2020-01-01"
        end-date:  
          type: string
          format: yyyy-MM-dd
          description: "Last date card is valid"
          example: "2020-12-31"
        doors:  
          type: array
          items:
             type: boolean
             format: true/false
             description: "Door access granted"
          example: [ true, false, false, true ]
          description: "List of doors and access"

    CardDetails:
      required: 
        - start-date
        - end-date
        - doors
      properties:
        start-date:  
          type: string
          format: yyyy-MM-dd
          description: "First date card is valid"
          example: "2020-01-01"
        end-date:  
          type: string
          format: yyyy-MM-dd
          description: "Last date card is valid"
          example: "2020-12-31"
        doors:  
          type: array
          items:
             type: boolean
             format: true/false
             description: "4 element boolean array corresponding to the door access permission"
          example: [ true, false, false, true ]
          description: "List of doors and access"

    CardPermissions:
      description: "List of doors to which the card has been granted access, along with associated access date ranges"      
      type: array
      items:
        $ref: "#/components/schemas/CardPermission"        
      example: [ { "door":"Entrance", "start-date":"2020-01-01", "end-date":"2020-12-31" },{ "door":"Workshop", "start-date":"2020-01-01", "end-date":"2020-12-31" },]
          
    CardPermission:
      required: 
        - door
        - start-date
        - end-date
      properties:
        door:  
          type: string
          format: door ID
          description: "Door ID corresponding to an entry in the controller configuration"
          example: "Entrance"
        start-date:  
          type: string
          format: yyyy-MM-dd
          description: "First date card access is enabled (as from 00:00)"
          example: "2020-01-01"
        end-date:  
          type: string
          format: yyyy-MM-dd
          description: "Last date card is enabled (until 23:59)"
          example: "2020-12-31"

    AccessListRecord:
      required: 
        - card-number
        - door
        - start-date
        - end-date
        - doors
      properties:
        card-number:  
          type: number
          format: uint32
          description: "Card number"
          example: 192837465
        start-date:  
          type: string
          format: yyyy-MM-dd
          description: "First date card access is enabled (as from 00:00)"
          example: "2020-01-01"
        end-date:  
          type: string
          format: yyyy-MM-dd
          description: "Last date card is enabled (until 23:59)"
          example: "2020-12-31"
        doors:
          type: array
          items:
            type: string
            format: door ID
            description: "Door ID that matches entry in configuration"
          example: ["Entrance", "Upstairs", "Downstairs"]

    PutACLResult:
      type: array
      items: 
          $ref: "#/components/schemas/PutACLResultRecord"        
      description: "Summary list of changes made to controller card lists"
      example: [ { "device-id":405419896, "unchanged":1, "updated":3, "added": 2, "deleted":1, "failed":0 } ]
        
    PutACLResultRecord:
      required: 
        - device-id
        - unchanged
        - updated
        - added
        - deleted
        - failed
      properties:
        device-id:  
          type: number
          format: uint32
          description: "UHPPOTE device serial number"
          example: 405419896
        unchanged:  
          type: number
          format: integer
          description: "Number of records unaffected by ACL update"
          example: 3
        updated:  
          type: number
          format: integer
          description: "Number of records updated by ACL update"
          example: 5
        added:  
          type: number
          format: integer
          description: "Number of records added by ACL update"
          example: 3
        deleted:  
          type: number
          format: integer
          description: "Number of records deleted by ACL update"
          example: 1
        failed:  
          type: number
          format: integer
          description: "Number of records failed to updated by ACL update"
          example: 0
      description: "Summary list of changes made to a controller card list"
      example: { "device-id":405419896, "unchanged":2, "updated":5, "added": 3, "deleted":1, "failed":0 }
      
    Events:
      required: 
        - first
        - last
      properties:
        first:
          type: number
          format: uint32
          description: "Index of the first stored event"
        last:
          type: number
          format: uint32
          description: "Index of the last stored event"
          
    Event:
      required: 
        - event-id
        - event-type
        - access-granted
        - door-id
        - door-opened
        - user-id
        - timestamp
        - event-result
      properties:
        event-id:  
          type: number
          format: uint32
          description: "Event id"
          example: 13
        event-type:  
          type: number
          format: uint8
          description: "Event type"
          example: 1
        access-granted:  
          type: boolean
          format: true/false
          description: "Access granted"
          example: true
        door-id:  
          type: number
          format: uint8
          description: "Door number [1..4]"
          example: 2
        user-id:  
          type: number
          format: uint32
          description: "User ID, typically card number"
          example: 192837465
        timestamp:  
          type: string
          format: yyyy-MM-dd HH:mm:ss
          description: "Event timestamp"
          example: "2020-03-27 12:34:56"
        event-result:  
          type: number
          format: uint8
          description: "Event result"
          example: 6

    DateRange:
      required: 
        - start-date
        - end-date
      properties:
        start-date:  
          type: string
          format: yyyy-MM-dd
          description: "First date card is valid"
          example: "2020-01-01"
        end-date:  
          type: string
          format: yyyy-MM-dd
          description: "Last date card is valid"
          example: "2020-12-31"
